/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     5.0                                |
|   \\  /    A nd           | Web:         http://www.foam-extend.org         |
|    \\/     M anipulation  | For copyright notice see file Copyright         |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      multiFvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
dictionaryName  fvSchemes;

multiSolver
{
    icoFoam1
    {
        ddtSchemes
        {
            default         Euler;
        }

        gradSchemes
        {
            default         Gauss linear;
            grad(p)         Gauss linear;
        }

        divSchemes
        {
            default         none;
            div(phi,U)      Gauss linear;
        }

        laplacianSchemes
        {
            default         none;
            laplacian(nu,U) Gauss linear corrected;
            laplacian((1|A(U)),p) Gauss linear corrected;
        }

        interpolationSchemes
        {
            default         linear;
            interpolate(HbyA) linear;
        }

        snGradSchemes
        {
            default         corrected;
        }
    }

    icoFoam2
    {
        ddtSchemes
        {
            default         Euler;
        }

        gradSchemes
        {
            default         Gauss linear;
            grad(p)         Gauss linear;
        }

        divSchemes
        {
            default         none;
            div(phi,U)      Gauss linear;
        }

        laplacianSchemes
        {
            default         none;
            laplacian(nu,U) Gauss linear corrected;
            laplacian((1|A(U)),p) Gauss linear corrected;
        }

        interpolationSchemes
        {
            default         linear;
            interpolate(HbyA) linear;
        }

        snGradSchemes
        {
            default         corrected;
        }
    }

    scalarTransportFoam
    {
         ddtSchemes
        {
            default none;
            ddt(T)  Euler;
        }

        gradSchemes
        {
            default         Gauss linear;
        }

        divSchemes
        {
            default         none;
            div(phi,T)      Gauss upwind;
        }

        laplacianSchemes
        {
            default         none;
            laplacian(DT,T) Gauss linear corrected;
        }

        interpolationSchemes
        {
            default         linear;
        }

        snGradSchemes
        {
            default         corrected;
        }
   }
}

// ************************************************************************* //
